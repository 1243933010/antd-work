generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id  Int     @id @default(autoincrement())
  email    String?
  name     String?
  access   String
  avatar   String?
  password String
  isShow   Boolean @default(true)
}



model Work {
  id          Int   @unique  @id @default(autoincrement())
  userId     Int
  workType   Int
  startTime  String?
  endTime    String?
  mounthTime String?
  workList    WorkList[]  
  workTags   WorkToWorkTag[]
  isShow   Boolean @default(true)
}



model WorkList {
  id      Int    @id @default(autoincrement())
  value   String
  workId Int
  work      Work    @relation( fields: [workId], references: [id])
  isShow   Boolean @default(true)
  @@index([workId])
}

model WorkTag {
  value Int    @id @default(autoincrement())
  tag   String
  color String
  works  WorkToWorkTag[] 
}

model WorkToWorkTag {
  work     Work     @relation(fields: [workId], references: [id])
  workId    Int
  workTag   WorkTag     @relation(fields: [workTagId], references: [value])
  workTagId Int

  @@id([workId, workTagId])
  @@index([workTagId])
  @@index([workId])
}


model MaterialLibraryClassification{
   id      Int    @id @default(autoincrement())
   label String
   materialLibrary MaterialLibrary[]
}

model MaterialLibrary{
   id      Int    @id @default(autoincrement())
   label String
   url String
   classificationId Int
   materialLibraryClassification MaterialLibraryClassification @relation(fields: [classificationId],references: [id])

   @@index([classificationId])
}